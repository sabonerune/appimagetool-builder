name: build-runtime

on:
  workflow_dispatch:
    inputs:
      tag-or-ref:
        description: ビルドするruntimeのタグまたはコミットハッシュ

jobs:
  build-runtime:
    strategy:
      matrix:
        include:
        - arch: x86_64
          os: ubuntu-latest
        - arch: aarch64
          os: ubuntu-24.04-arm

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout type2-runtime
        uses: actions/checkout@v5
        with:
          repository: AppImage/type2-runtime

      - name: Get git hash
        run: |
          echo -n "https://github.com/AppImage/type2-runtime/commit/" > src/runtime/version
          git rev-parse --short HEAD | xargs >> src/runtime/version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build runtime
        run: |
          mkdir dist
          cd dist
          env ARCH=${{ matrix.arch }} ../scripts/docker/build-with-docker.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: runtime-${{ matrix.arch }}
          path: dist/*

  get-build-info:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.info.outputs.tag }}

    steps:
      - name: Checkout type2-runtime
        uses: actions/checkout@v5
        with:
          repository: AppImage/type2-runtime

      - name: Get git infomation
        id: info
        run: |
          if git describe --tags --exact-match > dev/null ; then
            echo "tag=$(git describe --tags --exact-match)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LICENSE
          path: LICENSE

  upload-release:
    runs-on: ubuntu-latest

    needs:
      - build-runtime
      - get-build-info

    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5

      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: runtime-*/*,LICENSE/LICENSE
          tag: type2-runtime-${{ needs.get-build-info.outputs.tag }}
